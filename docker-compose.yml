version: '3.8'
networks:
  internal_network:
    name: 'crypto-project-network'
    
volumes:
  postgres-data:

services:

  crypto-project-nest_dev:
    build:
      context: ./crypto-project-nest/
      dockerfile: Dockerfile
      target: dev
    container_name: "crypto-project-nest"
    volumes:
      - ./crypto-project-nest:/app
    ports:
      - ${EXPOSED_BACKEND_PORT}:${INTERNAL_BACKEND_PORT}
      - ${EXPOSED_BACKEND_WEB_SOCKET_PORT}:${INTERNAL_BACKEND_WEB_SOCKET_PORT}   
    networks:
      - internal_network
    env_file:
      - ./crypto-project-nest/.env
    depends_on:
      - crypto-project-db
    command: sh -c "npm run serve:dev"

  crypto-project-angular:
    build:
      context: ./crypto-project-angular
      dockerfile: Dockerfile
      target: ${ENVIRONMENT}
    container_name: "crypto-project-angular"
    volumes:
      - ./crypto-project-angular:/app
    ports:
      - ${EXPOSED_FRONTEND_PORT}:${INTERNAL_FRONTEND_PORT}
    networks:
      - internal_network
    env_file:
      - ./crypto-project-angular/.env
    command: bash -c "npm run serve:dev"

  # crypto-project-traefik:
  #     image: "traefik:v2.9"
  #     container_name: "crypto-project-traefik"
  #     command:
  #       - "--log.level=DEBUG"
  #       - "--api.insecure=true" # only localhost
  #       - "--providers.docker=true"
  #       - "--providers.docker.exposedbydefault=false"
  #       - "--log.filePath=traefik.log"
  #       - "--log.format=json"
  #       - "--accesslog.filepath=access.log"
  #       - "--entrypoints.web.address=:80"
  #       - "--entrypoints.websecure.address=:443"
  #       - "--entrypoints.socket.address=:3000"
  #       - "--entryPoints.socket.proxyProtocol.insecure"
  #       - "--certificatesresolvers.myresolver.acme.email=kiarashatri@gmail.com"
  #       - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #       - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  #       -  --entrypoints.web.http.redirections.entryPoint.to=websecure
  #     ports:
  #       - "80:80"
  #       - "443:443"
  #       - "3000:3000"
  #       - "8080:8080"
  #     networks:
  #       - internal_network
  #     volumes:
  #       - "/var/run/docker.sock:/var/run/docker.sock:ro"

  crypto-project-db:
    image: postgres:15.2-alpine
    container_name: "crypto-project-db"
    restart: always
    ports:
      - "5432:5432"
    networks:
      - internal_network
    environment:
        - POSTGRES_USER=root
        - POSTGRES_PASSWORD=toor
        - POSTGRES_DB=currency_manager

